# In Salesforce, in old UI, go to Create > Apps > Connected Apps > New
# And create an app with the following settings:
# - Enable OAuth Settings
# - Callback URL: http://localhost:3000/callback
# - Selected OAuth Scopes: Access and manage your data (api)
# - Require Secret for Web Server Flow: unchecked
# - Require Secret for Refresh Token Flow: unchecked
# - Require Secret for JWT Flow: unchecked
# - Allow users to self-authorize: checked
# - Use digital signatures: unchecked
# - Include subdomain in callback URL: unchecked
# - Refresh Token Policy: Refresh token is valid until revoked
# - Immediately expire refresh token: unchecked
# - IP Relaxation: Relax IP restrictions
# - Refresh Token is encrypted: unchecked
# This will give you a Consumer Key and a Consumer Secret
# You can then use the Consumer Key as the SF_CLIENT_ID and the Consumer Secret as the SF_CLIENT_SECRET
SF_CLIENT_ID="3MVG95NPsF2gwOiO773mMVcuRr5NKH2b6SYWKu1zAEDYqOWHjCJ3D_toyz2ds3ImeeWZUXx9ItTWJn4i0yakP"
SF_CLIENT_SECRET="BA10ED4AD60CE64457D5B92A50256ADBB4EE56E0700AB13A2A0293DB9AA5D049"

# The login endpoint for the Salesforce API
# This is usually https://login.salesforce.com for production and https://test.salesforce.com for sandbox
SF_LOGIN_URL="https://login.salesforce.com"

# To authenticate to SF, we need 3 additional environment variables:
# - SF_USERNAME: the username of the user you want to authenticate as
# - SF_PASSWORD: the password of the user you want to authenticate as
# - SF_SECURITY_TOKEN: the security token of the user you want to authenticate as
# You can get the security token by going to Setup > My Personal Information > Reset My Security Token
# This will send you an email with the security token
SF_USERNAME="api@chabe.fr"
SF_PASSWORD="G9V#VATv6bd7*T"
SF_SECURITY_TOKEN="QL2XiS0wJgsHpAO8cLc0nvLDU"

SF_TYPENAME_HOTEL="Account"

SF_ACCOUNT_URL="https://chabe.my.salesforce.com/"
SF_VERSION="v58.0"

# This was inserted by `prisma init`:
# Environment variables declared in this file are automatically made available to Prisma.
# See the documentation for more detail: https://pris.ly/d/prisma-schema#accessing-environment-variables-from-the-schema

# Prisma supports the native connection string format for PostgreSQL, MySQL, SQLite, SQL Server, MongoDB and CockroachDB.
# See the documentation for all the connection string options: https://pris.ly/d/connection-strings

DATABASE_URL="postgresql://johndoe:randompassword@localhost:5432/mydb?schema=public"